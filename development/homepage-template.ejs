<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf8">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>SCsupercraft's Extension Gallery</title>
    <meta name="theme-color" content="#ff4c4c">
    <meta name="description" content="SCsupercraft's Extension Gallery.">
    <style>
      :root {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        color-scheme: light dark;
      }
      @media (prefers-color-scheme: dark) {
        :root {
          color: #eee;
          background: #111;
        }
        a {
          color: #56b2ff;
        }
        a:visited {
          color: #f192ff;
        }
        a:active {
          color: red;
        }
        .invert-dark {
          filter: invert(100%);
        }
      }

      h1 {
        margin: 16px 0;
      }
      h2, h3, p {
        margin: 8px 0;
      }

      .section {
        max-width: 928px;
        margin: 24px auto;
      }

      .header h1 {
        font-size: 2.5em;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: normal;
        text-align: center;
      }
      .header img {
        width: 56px;
        height: 56px;
        flex-shrink: 0;
        margin: 0 8px 0 0;
      }
      @media (max-width: 750px) {
        .header h1 {
          flex-direction: column;
        }
        .header img {
          margin: 0 0 8px 0;
        }
      }

      .infobox, .development-tools {
        padding: 8px;
        margin: 8px 0;
        border-radius: 8px;
        background: rgba(0, 195, 255, 0.245);
        border: 1px solid rgba(0, 187, 255, 0.604);
      }
      .infobox-warning {
        background-color: rgba(255, 0, 0, 0.245);
        border-color: rgba(255, 0, 0, 0.446);
      }
      .infobox-title {
        font-weight: bold;
        margin-bottom: 4px;
      }

      .development-tools {
        background-color: rgba(200, 0, 255, 0.245);
        border-color: rgba(234, 0, 255, 0.604);
      }
      .development-tools h2 {
        font-size: 1em;
      }

      .extensions {
        display: -ms-grid;
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        margin: 16px -4px;
      }
      @media (max-width: 944px) {
        .extensions {
          grid-template-columns: 1fr 1fr;
        }
      }
      @media (max-width: 650px) {
        .extensions {
          grid-template-columns: 1fr;
        }
      }

      .extension {
        position: relative;
        border: 2px solid #ccc;
        border-radius: 8px;
        margin: 4px;
        overflow: hidden;
        padding: 8px;
      }
      @media (prefers-color-scheme: dark) {
        .extension {
          border-color: #333;
        }
      }
      .extension h3 {
        font-size: 1.5em;
      }
      .extension > :last-child {
        margin-bottom: 0;
      }
      .extension-banner {
        position: relative;
        margin: -8px -8px 0 -8px;
      }
      .extension-image {
        display: block;
        width: 100%;
        /* TODO: see if there's another way to do this that works in older browsers too */
        aspect-ratio: 2 / 1;
      }

      .extension-buttons {
        position: absolute;
        top: 0;
        left: 0;
        display: flex;
        flex-wrap: wrap;
        width: 100%;
        height: 100%;
        align-items: center;
        align-content: center;
        justify-content: center;
        gap: 0.5rem;
        opacity: 0;
        transition: opacity .15s;
        background: rgba(0, 0, 0, 0.5);
        pointer-events: none;
      }
      .extension:hover .extension-buttons, .extension:focus-within .extension-buttons {
        opacity: 1;
        backdrop-filter: blur(0.6px);
      }
      .extension-buttons > * {
        padding: 0.5rem;
        background-color: #4c97ff;
        border-radius: 0.5rem;
        border: none;
        font: inherit;
        cursor: pointer;
        color: white;
        text-decoration: none;
        pointer-events: auto;
        transition: filter 0.15s;
        filter: drop-shadow(0px 1px 3px #00000075);
      }
      .extension-buttons > *:hover {
        filter: drop-shadow(0px 1px 7px black);
        z-index: 1;
      }
      .extension-buttons *:active {
        filter: brightness(0.85) drop-shadow(0px 1px 2px #00000075);
      }
      .extension-buttons *:disabled {
        opacity: 0.5;
      }
      .extension-buttons .open {
        background-color: #ff4c4c;
        color: white;
      }
      .extension-buttons .docs {
        background-color: #FFAB19;
        color: white;
      }
      .extension-buttons .sample {
        background-color: #40BF4A;
        color: white;
      }
      .extension-buttons :disabled {
        opacity: 0.5;
      }

      .sample-list {
        display: none;
        position: absolute;
        left: 0.5rem;
        right: 0.5rem;
        width: calc(100% - 1rem);
        margin-top: -1.5rem;
        padding: 0.5rem;
        box-sizing: border-box;
        background-color: white;
        border-radius: 0.5rem;
        box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, .3);
        border: 1px solid rgba(0, 0, 0, 0.15);
        flex-direction: column;
        gap: 0.5rem;
      }
      .sample-list h3 {
        font-size: 1rem;
        margin: 0;
      }
      .extension:hover[data-samples-open="true"] .sample-list {
        display: flex;
      }
      @media (prefers-color-scheme: dark) {
        .sample-list {
          border: 1px solid rgba(255, 255, 255, 0.15);
          background-color: #333;
        }
      }

      footer {
        opacity: 0.8;
        width: 100%;
        text-align: center;
        margin-bottom: 16px;
      }
      footer p {
        margin: 0 0 8px 0;
      }
    </style>
  </head>

  <body>
    <div class="section header">
      <h1>
        <img src="/extensions/scsupercraft.png"></img>
        <div>SCsupercraft's Extension Gallery</div>
      </h1>

      <p>
        To use these extensions in PenguinMod or TurboWarp (if compatible), hover over the extension and press the button to copy its code. Then go to the editor, open the extension chooser, then choose the "Custom Extension" option, select text and paste the code. Make sure that run without sandbox is checked!
      </p>

      <div class="infobox infobox-warning">
        <div class="infobox-title">These extensions are not compatible with Scratch.</div>
        Projects that use these extensions can't be uploaded to the Scratch website.
        They can, however, be used in <a href="https://studio.penguinmod.com/PenguinMod-Packager/">the packager</a>.
      </div>

      <div class="infobox">
        <div class="infobox-title">Some extensions may not work in TurboWarp.</div>
        These extensions are made for PenguinMod and may not work in TurboWarp, any issues caused by TurboWarp may not be fixed.
      </div>
    </div>

    <% if (mode === "development") { %>
      <div class="section">
        <div class="development-tools">
          <h2>Development Server Tools</h2>
          <p>
            Most recently modified extensions:
            <% for (const extensionSlug of mostRecentExtensions) { %>
              <a href="<%= getRunExtensionURL(extensionSlug) %>"><%= extensionSlug %>.js</a>
            <% } %>
          </p>
        </div>
      </div>
    <% } %>

    <script>
      function writeText(text) {
        if (navigator.clipboard && navigator.clipboard.writeText) {
          navigator.clipboard.writeText(text);
        } else {
          var input = document.createElement('input');
          input.value = text;
          input.style.top = '0';
          input.style.left = '0';
          input.style.position = 'fixed';
          document.body.appendChild(input);
          input.focus();
          input.select();
          try {
            document.execCommand('copy');
          } catch (e) {
            console.error(e);
          }
          document.body.removeChild(input);
          e.target.focus();
        }
      }
      document.addEventListener('click', function (e) {
        var toCopy = e.target.getAttribute('data-copy');
        if (toCopy) {
          if (e.target.getAttribute('class') == "copyCode") {
            fetch(toCopy)
              .then((response) => response.text())
              .then((data) => {
                writeText(data);
              });
          } else {
            writeText(toCopy)
          }
        }

        if (e.target.className.includes('sample-list-button')) {
          var extension = e.target.closest('.extension');
          extension.dataset.samplesOpen = extension.dataset.samplesOpen !== 'true';
        }
      });
    </script>

    <div class="section extensions-outer">
      <div class="extensions">
        <%
        const peopleToHTML = (people) => {
          let result = '';
          for (let i = 0; i < people.length; i++) {
            result += people[i].toHTML();
            if (i === people.length - 1) {
              // do nothing
            } else if (i === people.length - 2) {
              if (people.length > 2) {
                result += ',';
              }
              result += ' and ';
            } else {
              result += ', ';
            }
          }
          return result;
        };
        %>
        <% for (const [extensionSlug, metadata] of Object.entries(extensionMetadata)) { %>
          <div class="extension">
            <div class="extension-banner">
              <% const image = extensionImages[extensionSlug] || 'images/unknown.svg'; %>
              <img loading="lazy" src="<%= image %>" class="extension-image">

              <div class="extension-buttons">
                <button class="copy" data-copy="<%= getFullExtensionURL(extensionSlug) %>">Copy URL</button>
                <button class="copyCode" data-copy="<%= getFullExtensionURL(extensionSlug) %>">Copy Code</button>
                <a class="open" href="<%= getRunExtensionURL(extensionSlug) %>">Open Extension</a>

                <% if (metadata.hasDocumentation) { %>
                  <a class="docs" href="<%= getDocumentationURL(extensionSlug) %>">Documentation</a>
                <% } %>

                <% if (metadata.samples.length === 1) { %>
                  <a class="sample" href="<%= getRunSampleURL(metadata.samples[0]) %>">Sample Project</a>
                <% } else if (metadata.samples.length > 1) { %>
                  <button class="sample sample-list-button">Sample Projects</button>
                <% } %>
              </div>
            </div>

            <% if (metadata.samples.length > 1) { %>
              <div class="sample-list">
                <h3><%= metadata.name %> Sample Projects:</h3>
                <% for (const sample of metadata.samples) { %>
                  <a class="sample-list-item" href="<%= getRunSampleURL(sample)%>"><%= sample.getTitle() %></a>
                <% } %>
              </div>
            <% } %>
      
            <h2><%= metadata.name %></h2>
            <p>
              <%= metadata.description %>
              <%- metadata.by.length ? `Created by ${peopleToHTML(metadata.by)}.` : '' %>
              <%- metadata.original.length ? `Originally created by ${peopleToHTML(metadata.original)}.` : '' %>
            </p>
          </div>
        <% } %>
      </div>
    </div>

    <footer class="section">
      <div class="links">
        <a href="https://github.com/SCsupercraft/extensions/tree/master/images#readme">Image Attribution</a>
        -
        <a href="https://github.com/SCsupercraft/extensions">GitHub</a>
        -
        <a href="https://docs.turbowarp.org/development/extensions/introduction">Developer Documentation</a>
      </div>
    </footer>
  </body>
</html>